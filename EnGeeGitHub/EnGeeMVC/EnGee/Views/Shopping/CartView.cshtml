@model List<EnGee.Models.SSJ_CShoppingCarItem>
@{
    ViewData["Title"] = "我的購物車";
}
@{
    Layout = "_Layout";
}
@{
    ViewBag.HeaderTitle = "我的購物車";
}

@{
    if (TempData["ErrorMessage_PointsInsufficient"] != null)
    {
    <script>
            alert('@Html.Raw(TempData["ErrorMessage_PointsInsufficient"])');
    </script>
    }
}
@if (TempData["ErrorMessage"] != null)
{
    <script>
        alert('@Html.Raw(TempData["ErrorMessage"])');
    </script>
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<style>
    /* 購物車網頁專用start */
    .nav-tabs .nav-link.active {
        background-color: #e54862ca;
        transition: color 0.2s
        /* 頁籤切換 */
    }

    .shopcartList {
        display: inline-block;
        margin: 0px 0px 10px 0px;
        padding-top: 24px;
        border-bottom: 2px solid #e1e1e1;
        width: 100%;
        box-sizing: border-box;
        /* 購物車頁面調整 */
    }

    .cartcontent .card-footer {
        background-color: white;
    }

    .cartcontent .cartimg img {
        width: 160px;
        height: 100%;
        object-fit: contain;
        max-height: 160px;
    }

    .selected {
        background-color: #e54862ca;
    }

    .payInfoBox {
        margin-top: 16px;
        background-color: white;
        border-radius: 6px;
    }

    input:disabled {
        opacity: 0.5; /* 使元素半透明 */
        cursor: not-allowed; /* 顯示不允許的光標 */
    }
    /* 購物車網頁專用end */
</style>
<script>
    //------------function------------------
    function getDeliveryOptionsForProduct(productId)
    {
        $.ajax({
            type: "GET",
            url: "/Product/GetDeliveryTypeIdForProduct",
            data: { productId: productId },
            success: function (deliveryTypeId)
            {
                // 預設禁用所有選項
                $('input[name="deliverytypeid_' + productId + '"]').prop('disabled', true).addClass('disabled-input');

                switch (deliveryTypeId)
                {
                    case 1:
                        $('input[data-product-id="' + productId + '"][data-delivery-type="宅配"]').prop('disabled', false).removeClass('disabled-input').prop('checked', true);
                        break;
                    case 2:
                        $('input[data-product-id="' + productId + '"][data-delivery-type="超商門市取貨"]').prop('disabled', false).removeClass('disabled-input').prop('checked', true);
                        break;
                    case 3:
                        $('input[data-product-id="' + productId + '"]').prop('disabled', false).removeClass('disabled-input');
                        $('input[data-product-id="' + productId + '"][data-delivery-type="宅配"]').prop('checked', true);
                        break;
                    default:
                        console.error("Unknown DeliveryTypeId for product:", productId, " DeliveryTypeId:", deliveryTypeId);
                }
            },
            error: function (jqXHR, textStatus, errorThrown)
            {
                console.error("Ajax request failed for product:", productId, "Error:", textStatus, errorThrown);
            }
        });
    }

    // 更新總點數函數
    function updateTotalPrice()
    {
        calculateAndDisplayTotal();
    }
    function calculateAndDisplayTotal()
    {
        let total = 0;
        let productTotalPoint = 0;

        // 對於已勾選的商品，加上它的小計到總點數
        $(".cartcheckout:checked").each(function ()
        {
            let productId = $(this).data("product-id");
            let labelValue = $(`.subtotalPoints[data-product-id=${productId}]`).text();
            productTotalPoint += parseFloat(labelValue);
        });

        let deliveryFee = parseFloat($('#productDeliveryFee').text());
        total = deliveryFee + productTotalPoint;

        // 更新總點數顯示
        $("#productTotalPoint").text(productTotalPoint);
        $('#checkoutTotalPoint').val(total);

        let memberPoints = parseFloat($("#memberPoints").val());
        // 計算餘額
        let remainingPoints = memberPoints - total;
        // 將結果更新到目標輸入框中
        $("#remainingPoints").val(remainingPoints);
    }

    function updateCartItem(productId, newCount = null, deliveryTypeId = null)
    {//將label的值與product-id傳至後台Shopping/UpdateCartItem
        $.ajax({
            type: "POST",
            url: "/Shopping/UpdateCartItem",
            data: { productId: productId, newCount: newCount, deliveryTypeId: deliveryTypeId }, // 发送数量
            success: function (result)
            {
                console.log("成功更新購物車項目：", result);
                // 測試用
                $(`.subtotalPoints[data-product-id=${productId}]`).text(result.subtotalPoints);
                //購物車有多個項目有subtotalPoints，故不適合用#subtotalPoints
                //.text() 方法也可以用在 label 標籤上，不僅僅是 span、div 或 p 等元素。
                updateTotalPrice();
            },
            error: function (error)
            {
                console.error('Error:', error);
            }
        });
    }

    function getSelectedProducts()
    {//選出chkbox被選擇的商品
        let selectedProducts = [];
        $(".cartcheckout:checked").each(function ()
        {
            let productId = $(this).data("product-id");
            selectedProducts.push(productId);
        });
        return selectedProducts;
    }
    //--------------------
</script>
<main class="bg-color3">
    <div class="container p-0">
        <div class="shopcartList">
            <nav>
                <div class="nav nav-tabs" id=" nav-tab" role="tablist">
                    @* //button 會有 aria-controls 屬性，指向相應分頁（頁面）的ID。分頁（頁面的 div）會有 aria-labelledby 屬性，指向相對應的 button 的ID。*@
                    <button class="nav-link active " id="nav-storePickup-tab" data-bs-toggle="tab"
                            data-bs-target="#nav-storePickup-content" type="button" role="tab" aria-controls="nav-storePickup-content"
                            aria-selected="true">
                        <a class="hrefstyle mt-2" href="@Url.Action("CartView", "Shopping")">購物車</a>
                    </button>
                    @* <button class="nav-link" id="nav-homeDelivery-tab" data-bs-toggle="tab"
                            data-bs-target="#nav-homeDelivery-content" type="button" role="tab" aria-controls="nav-homeDelivery-content"
                            aria-selected="false">
                        <a class="hrefstyle mt-2" href="@Url.Action("CartView_ConvenienceStore", "Shopping")">超商/i郵箱/myfone門市取貨</a>
                    </button> *@
                </div>
                <hr class="hr-m4px">
            </nav>
            <div class="tab-content " id="nav-tabContent">
                <div class="tab-pane fade show active" id="nav-storePickup-content" role="tabpanel" aria-labelledby="nav-storePickup-tab">
                    @{
            //將值傳遞至後台
                            <input type="hidden" name="BuyerId" value="填入BUYLLER">
                        int count = 0;
                        decimal pay = 0;
                        if (Model != null && Model.Any())
                        {
                            foreach (var item in Model)
                            {
                            // 前端變更運送方式用
                                    <input type="hidden" name="originalDeliveryType" data-product-id="@item.ProductId" value="@item.DeliveryType">
                                //保存原始的DeliveryTypeID值
                                    <input type="hidden" name="DeliveryTypeID" value="@item.DeliveryTypeID" />
                                //將值傳遞至後台
                                    <input type="hidden" name="SellerId" value="@item.SellerId">
                                    <input type="hidden" name="SelectedDeliveryTypeIDs[@item.ProductId]" value="" />
                                    <div class="card p-2">
                                        <div class="cartcontent">
                                            <div class="row m-0 ">
                                                <div class="col-xl-2 col-lg-3 col-md-4 col-5  d-flex align-items-center justify-content-center">
                                                    <div class="form-check">
                                                        <input class="cartcheckout form-check-input" type="checkbox" value="" data-product-id="@item.ProductId" checked>
                                                    </div>
                                                    <div class="cartimg d-flex">
                                                        <img class="card-img img-fluid" src="@item.ProductImagePath" alt="@item.tproduct.ProductName" />
                                                    </div>
                                                </div>
                                                <div class="col-xl-8 col-lg-7 col-md-6 col-4 p-0 pe-2">
                                                    <div class="card-body p-0">
                                                        <h5 class="card-title">
                                                            @Html.DisplayFor(modelItem => item.tproduct.ProductName)
                                                        </h5>
                                                        <p class="card-text">
                                                            //其他資訊擺放位置
                                                        </p>
                                                    </div>
                                                </div>
                                                <div class="card-footer col-xl-2 col-lg-2 col-md-2 col-3 border-0 p-0">
                                                    <label class="me-1 mb-2">點數:</label>
                                                    <label>@Html.DisplayFor(modelItem => item.point)</label><br>
                                                    <label class="me-1 mb-2">數量:</label>
                                                    <button class="btn btn-rong-s btnHoverStyle2 btnMinus" type="button">-</button>
                                                    <label class="me-2" data-product-id="@item.ProductId">@Html.DisplayFor(modelItem => item.count)</label>
                                                    <button class="btn btn-rong-s btnHoverStyle2 btnPlus" type="button">+</button>
                                                    <label class="me-1 mb-2">小計:</label>
                                                    <label class="me-2 subtotalPoints" data-product-id="@item.ProductId">@Html.DisplayFor(modelItem => item.小計)</label>
                                                    <label class="me-1 mb-2 @item.ProductId">所選配送方式:</label>
                                                    <label class="me-2 mb-2 delivery-label @item.ProductId" data-product-id="@item.ProductId">@item.DeliveryType</label>
                                                    @*保存原始的DeliveryType、DeliveryTypeID值
                                    <input type="hidden" name="DeliveryTypeID" value="@item.DeliveryTypeID" />
                                    <input type="hidden" name="originalDeliveryType" data-product-id="@item.ProductId" value="@item.DeliveryType">*@
                                                    @*保存原始的SelectedDeliveryTypeID值 *@
                                                    @*<input type="hidden" name="SelectedDeliveryTypeIDs[@item.ProductId]" value="" />*@
                                                    <label class="me-2 mb-2 product-seller-name" data-seller-id="@item.SellerId">賣家: @item.SellerId</label><br>
                                                    <text>
                                                        <script>
                                                            getDeliveryOptionsForProduct(@item.ProductId);
                                                        </script>
                                                    </text>
                                                    <label>
                                                        <input type="radio" name="deliverytypeid_@item.ProductId" class="delivery-radio"
                                                               data-product-id="@item.ProductId" data-delivery-type="宅配" value="1" id="homeDelivery"
                                                               data-label-class="delivery-label @item.ProductId">宅配
                                                    </label>
                                                    <label>
                                                        <input type="radio" name="deliverytypeid_@item.ProductId" class="delivery-radio"
                                                               data-product-id="@item.ProductId" data-delivery-type="超商門市取貨" value="2" id="StorePickup"
                                                               data-label-class="delivery-label @item.ProductId">超商門市取貨
                                                    </label>
                                                    <a class="hrefstyle delete-item" href="#" data-product-id="@item.ProductId">刪除</a>
                                                </div>
                                            </div>
                                        </div>
                                        <hr class="hr-m4px">
                                    </div>
                            }
                                <div class="container p-0 ">
                                    <div class="row m-0 p-0">
                                        <div class="payInfoBox d-flex align-items-center justify-content-end">
                                            <div class="form-check col-xl-4 col-lg-4 col-md-3 col-2 ms-2">
                                                <input class=" form-check-input select-all-checkbox" type="checkbox"
                                                       data-target=".cartcheckout" id="storePickupSelectAll" checked>
                                                <label class="form-check-label" for="storePickupSelectAll">全選</label>
                                            </div>
                                            <div class="totalPriceMoney col-xl-3 col-lg-3 col-md-4 col-4 ">
                                                商品總點數：<span> $ </span><span id="productTotalPoint"> @pay.ToString() </span>
                                            </div>
                                            <div class="totalPriceMoney col-xl-1 col-lg-3 col-md-2 col-3">
                                                商品運費：<span>  </span><span id="productDeliveryFee"> </span>
                                            </div>
                                            <div class="col-xl-4 col-lg-2 col-md-3 col-3 d-flex justify-content-end">
                                                <button class="btn btn-m btnHoverStyle2 m-1" id="checkoutButton" type="button" onclick="toggleCheckout('CheckoutStorePickup')">結帳</button>
                                            </div>
                                        </div>
                                        <div class="d-flex align-items-center justify-content-end">
                                            <a class="hrefstyle mt-2" href="@Url.Action("IndexSSJ", "Product")">繼續購物</a>
                                        </div>
                                    </div>
                                </div>
                //隱藏宅配表單
                                <div class="CheckoutStorePickup" tabindex="0" id="CheckoutStorePickup" style="display: none;">
                                    <div class="container mt-5">
                                        <div class="input-group mb-2 d-flex  align-items-end">
                                            <div class="fz-size32px">
                                                會員資料
                                            </div>
                                            <div class="d-flex align-items-center justify-content-center border-0 fz-size16px m-1">
                                                <input class="form-check-input mt-0  " type="checkbox" id="defaultCheck_memberInformation">
                                                <label class="form-check-label" for="defaultCheck_memberInformation">
                                                    帶入會員資料
                                                </label>
                                            </div>
                                        </div>
                                        <form method="post" action="@Url.Action("ConfirmPurchase", "Shopping")">
                                            <input type="hidden" name="SelectedProducts" id="SelectedProducts" />
                                            <div class="input-group mb-2">
                                                <span class="input-group-text">收件人姓名</span>
                                                <input type="text" class="form-control" name="ReceiverName">
                                            </div>
                                            <div class="input-group mb-2">
                                                <span class="input-group-text">收件人手機</span>
                                                <input type="text" class="form-control" name="ReceiverTEL">
                                            </div>
                                            <div class="input-group mb-2">
                                                <span class="input-group-text">收件人宅配地址</span>
                                                <input type="text" class="form-control" name="DeliveryAddress_homeDelivery" placeholder="商品請選擇宅配方式" value="">
                                            </div>
                                            <div class ="input-group mb-2">
                                                <span class="input-group-text">收件人超商取貨地址 </span>
                                                <input type="text" class="form-control " id="storeID" placeholder="店號" name="DeliveryStoreID_storePickup" readonly>
                                                <input type="text" class="form-control w-40" id="txtStoreName" list="storeNameSuggestions" placeholder="輸入店名" oninput="updateStoreNameSuggestions()" name="DeliveryStoreName_storePickup">
                                            <datalist id="storeNameSuggestions"></datalist>
                                                <input type="text" class="form-control w-50" id="txtStoreAddress" list="StoreAddressSuggestions" placeholder="輸入地址" oninput="updateStoreAddressSuggestions()" name="DeliveryAddress_storePickup">
                                            <datalist id="StoreAddressSuggestions"></datalist>
                                            </div>
                                            <div class="container mt-4">
                                                <div class="input-group mb-2">
                                                    <span class="input-group-text">結帳扣點</span>
                                                    <input type="form-text" class="form-control" id="checkoutTotalPoint" readonly>
                                                    <span class="input-group-text">會員點數</span>
                                                    <input type="form-text" class="form-control" readonly value="@ViewBag.MemberPoints">
                                                    <input type="hidden" id="memberPoints" value="@ViewBag.MemberPoints" />
                                                    <span class="input-group-text">購買後剩餘點數</span>
                                                    <input type="form-text" class="form-control" id="remainingPoints" readonly value="@ViewBag.MemberPoints">
                                                </div>
                                                <div class="d-flex justify-content-center ">
                                                    <a class=" hrefstyle1-m  m-2 px-3 py-2" onclick="window.location.href='/NL_TopUp/Index'">儲值</a>
                                                    <button class="btn btn-m btnHoverStyle2 m-2" type="submit" id="confirmPurchaseButton">確認結帳</button>
                                                    <a class=" hrefstyle m-2 px-3 py-2" href="@Url.Action("IndexSSJ", "Product")">取消</a>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                        }
                        else
                        {
                                <div class="alert alert-warning">您的購物車是空的。</div>
                                <div class="d-flex align-items-center justify-content-center">
                                    <a class="hrefstyle hrefstyle1:hover mt-2" href="@Url.Action("IndexSSJ", "Product")">繼續購物</a>
                                </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</main>
<script>
    var formDisplayed = false;
    document.addEventListener("DOMContentLoaded", function ()
    {//當有商選中時，隱藏表單顯示，沒選中時相反
        var checkboxes = document.querySelectorAll('.cartcheckout');

        checkboxes.forEach(function (checkbox)
        {
            checkbox.addEventListener('change', function ()
            {
                if (formDisplayed)
                {
                    toggleFormVisibility();
                }
            });
        });
    });
    function toggleFormVisibility()
    {
        var isChecked = false;
        var checkboxes = document.querySelectorAll('.cartcheckout');
        for (var i = 0; i < checkboxes.length; i++)
        {
            if (checkboxes[i].checked)
            {
                isChecked = true;
                break;
            }
        }
        var element = document.getElementById('CheckoutStorePickup');
        if (isChecked)
        {
            element.style.display = "block";
        } else
        {
            element.style.display = "none";
        }
        formDisplayed = isChecked;
    }
    function toggleCheckout(elementId)
    {
        var isChecked = false;
        var checkboxes = document.querySelectorAll('.cartcheckout');

        for (var i = 0; i < checkboxes.length; i++)
        {
            if (checkboxes[i].checked)
            {
                isChecked = true;
                break;
            }
        }
        var element = document.getElementById(elementId);
        if (isChecked)
        {
            if (formDisplayed)
            {
                element.focus(); // 當表單已顯示且再次按下結帳，聚焦於表單
            } else
            {
                element.style.display = "block";
                formDisplayed = true;
            }
        } else
        {
            alert('請先選擇至少一件商品！');
            element.style.display = "none";
            formDisplayed = false;
        }
    }
    // -------------------------
    $(document).ready(function ()
    {
        updateTotalPrice();
        // 監聽全選checkbox的改變事件
        $("#storePickupSelectAll").change(function ()
        {
            // 根據全選checkbox的選擇狀態來設置所有商品checkbox的選擇狀態
            let isChecked = $(this).prop('checked');
            $(".cartcheckout").prop('checked', isChecked);

            // 若全選checkbox取消勾選，則隱藏表單
            if (!isChecked)
            {
                toggleFormVisibility();
            }
            // 更新總點數
            updateTotalPrice();
        });
        // 監聽每個商品checkbox的改變事件
        $(".cartcheckout").change(function ()
        {
            // 如果所有商品checkbox都被選擇，全選checkbox應該也被選擇，否則取消選擇
            if ($(".cartcheckout:checked").length === $(".cartcheckout").length)
            {
                $("#storePickupSelectAll").prop('checked', true);
            } else
            {
                $("#storePickupSelectAll").prop('checked', false);
            }
            updateTotalPrice();
        });
    });

    $(document).ready(function ()
    {//傳遞CHKbox被選中的ID
        $('form').on('submit', function (e)
        {
            let selectedProducts = getSelectedProducts();
            $('input[name="SelectedProducts"]').val(JSON.stringify(selectedProducts));
        });
    });
    // ------------------------------
    // 當帶入會員資料勾選時自動帶入會員資料'
    var jsonData = @Html.Raw(Json.Serialize(ViewBag.userFromDatabase ?? new {}));
    document.getElementById('defaultCheck_memberInformation').addEventListener('change', function ()
    {  let isHomeDeliverySelected = $(".delivery-radio[data-delivery-type='宅配']:checked").length > 0;
       let isStorePickupSelected = $(".delivery-radio[data-delivery-type='超商門市取貨']:checked").length > 0;
    // 因確認結帳時會判斷所有欄位是否都有填寫，所以不需要填寫的欄位也需要給值，以下為填寫邏輯控制
        if (this.checked)
        {
            if (jsonData)
            {
                if (isHomeDeliverySelected && !isStorePickupSelected)
                {
                    document.querySelector("input[name='ReceiverName']").value = '@Html.Raw(ViewBag.userFromDatabase.Fullname)';
                    document.querySelector("input[name='ReceiverTEL']").value = '@Html.Raw(ViewBag.userFromDatabase.Phone)';
                    document.querySelector("input[name='DeliveryAddress_homeDelivery']").value = '@Html.Raw(ViewBag.userFromDatabase.Address)';
                    document.querySelector("input[name='DeliveryStoreID_storePickup']").value = "超商門市取貨未選擇";
                    document.querySelector("input[name='DeliveryStoreName_storePickup']").value = "超商門市取貨未選擇";
                    document.querySelector("input[name='DeliveryAddress_storePickup']").value = "超商門市取貨未選擇";
                }

                else if (isStorePickupSelected && !isHomeDeliverySelected)
                {
                    document.querySelector("input[name='ReceiverName']").value = '@Html.Raw(ViewBag.userFromDatabase.Fullname)';
                    document.querySelector("input[name='ReceiverTEL']").value = '@Html.Raw(ViewBag.userFromDatabase.Phone)';
                    document.querySelector("input[name='DeliveryAddress_homeDelivery']").value = "宅配未選擇";
                }

                else if (isStorePickupSelected && isHomeDeliverySelected)
                {
                    document.querySelector("input[name='ReceiverName']").value = '@Html.Raw(ViewBag.userFromDatabase.Fullname)';
                    document.querySelector("input[name='ReceiverTEL']").value = '@Html.Raw(ViewBag.userFromDatabase.Phone)';
                    document.querySelector("input[name='DeliveryAddress_homeDelivery']").value = '@Html.Raw(ViewBag.userFromDatabase.Address)';
                }
            }
        } else
        {
            document.querySelector("input[name='ReceiverName']").value = "";
            document.querySelector("input[name='ReceiverTEL']").value = "";
            document.querySelector("input[name='DeliveryAddress_homeDelivery']").value = "";
            document.querySelector("input[name='DeliveryStoreID_storePickup']").value = "";
            document.querySelector("input[name='DeliveryStoreName_storePickup']").value = "";
            document.querySelector("input[name='DeliveryAddress_storePickup']").value = "";
        }
    });
    // -------------------------
    $(document).ready(function ()
    {
        $(".delete-item").click(function (event)
        {//刪除購物出商品
            event.preventDefault(); // 阻止超連結默認
            // 獲取刪除商品ID
            var productId = $(this).data("product-id");

            $.ajax({
                url: "/Shopping/DeleteCartItem",
                type: "POST",
                data: { productId: productId },
                success: function (response)
                {
                    if (response.success)
                    {
                        location.reload();
                    }
                },
                error: function ()
                { console.error('Error:', error); }
            });
        });
    });
    // -----------------------------
    $(document).ready(function ()
    {
        // 為每個減少按鈕添加點擊事件
        $('.btnMinus').click(function ()
        {
            var $label = $(this).next('label');
            var count = parseInt($label.text(), 10);
            var productId = $label.data('product-id');
            if (count > 1)
            {
                count--;
                $label.text(count);
                updateCartItem(productId, count, null);
                updateTotalPrice(); selectedDelivery
            }
        });

        $('.btnPlus').click(function ()
        {
            var $label = $(this).prev('label');
            var count = parseInt($label.text(), 10);
            var productId = $label.data('product-id');

            $.ajax({
                type: "GET",
                url: "/Product/GetProductRemainingQuantityForProduct",
                data: { productId: productId },
                success: function (ProductRemainingQuantity)
                {
                    if (count < ProductRemainingQuantity)
                    {
                        count++;
                        $label.text(count);
                        updateCartItem(productId, count, null);
                        updateTotalPrice();
                    } else
                    {
                        alert("已達商品庫存上限!");
                    }
                },
                error: function (jqXHR, textStatus, errorThrown)
                {
                    console.error("Ajax request failed:", textStatus, errorThrown);
                }
            }); // <-- 注意這裡，結束 $.ajax 的大括號和括號
        }); // <-- 結束 click 事件的大括號和括號
    });
    // ---------------------
    $(document).ready(function ()
    {//chkBox變更商品deliveryType
        $(".delivery-radio").each(function ()
        {
            var productId = $(this).data("product-id");
            var deliveryType = $(this).data("delivery-type");
            var originalDeliveryType = $("input[name='originalDeliveryType'][data-product-id='" + productId + "']").val();

            if (deliveryType === originalDeliveryType)
            {
                $(this).prop("checked", true);
                $(".delivery-label." + productId).text(deliveryType);
            }
        });
        $(".delivery-radio").change(function ()
        {
            var productId = $(this).data("product-id");
            var newDeliveryType = $(this).data("delivery-type");
            var deliveryTypeId = $(this).val(); // 從radio button的value取得
            $(".delivery-label." + productId).text(newDeliveryType);
            $("#selectedDeliveryTypeID_" + productId).val(deliveryTypeId);
            var $label = $(`label[data-product-id=${productId}]`);
            updateCartItem(productId, null, deliveryTypeId)

        });
    });
    //--------------------------------
    $(document).ready(function ()
    {
        // 變更運費標籤
        // 函數：獲取選中的配送方式並更新運費
        function updateDeliveryFee()
        {
            var selectedDeliveryTypeIDs = [];

            // Get selected radio buttons
            $(".delivery-radio:checked").each(function ()
            {
                var productId = $(this).data("product-id");
                var deliveryTypeId = $(this).val();

                selectedDeliveryTypeIDs.push({
                    productId: productId,
                    deliveryTypeId: deliveryTypeId
                });
            });

            // Send data to backend
            $.ajax({
                url: "/Shopping/GetTotalDeliveryFee",
                method: "POST",
                data: { selectedDeliveryTypeIDs: selectedDeliveryTypeIDs },
                success: function (response)
                {
                    $('#productDeliveryFee').text(response.totalFee);
                    // After updating the delivery fee, recalculate the total
                    calculateAndDisplayTotal();
                }
            });
        }

        // 監聽選中的配送方式的變化
        $(".delivery-radio").change(updateDeliveryFee);

        // 在頁面加載時立即獲取選中的配送方式並更新運費
        updateDeliveryFee();
    });

   
//讀取賣家名子
    $(document).ready(function ()
    {
        $(".product-seller-name").each(function ()
        {
            const sellerId = $(this).data("seller-id");

            $.ajax({
                type: "GET",
                url: "/Shopping/GetProductSellerID",
                data: { value: sellerId },
                context: this, // 這將確保在 'success' callback 中使用正確的標籤
                success: function (response)
                {
                    $(this).html("賣家: " + response);
                },
                error: function ()
                {
                    $(this).html("賣家: NULL");
                }
            });
        });
    });

    $(document).ready(function ()
    {
        $('#confirmPurchaseButton').click(function (e)
        {
            // 阻止表單的默認提交行為
            e.preventDefault();

            var isFormComplete = true;
            $('input[type="text"]').each(function ()
            {
                if ($(this).val().trim() === '')
                {
                    isFormComplete = false;
                    return false; // 離開 each 循環
                }
            });

            if (isFormComplete)
            {
                // 提交表單
                $(this).closest('form').submit();
            } else
            {
                alert('請填寫會員資料');
            }
        });
    });
    //----------
    //門市
    var allStores = @Html.Raw(Json.Serialize(ViewBag.Stores));

    function updateStoreAddressSuggestions()
    {
        let input = document.getElementById("txtStoreAddress").value.toLowerCase();
        let dataList = document.getElementById("StoreAddressSuggestions");

        // 清除先前的建議
        dataList.innerHTML = "";

        // 使用 allStores 資料
        for (let store of allStores)
        {
            if (store.address && store.address.toLowerCase().includes(input))
            {
                let option = document.createElement("option");
                option.value = store.address;
                dataList.appendChild(option);
            }
        }
    }
    function updateStoreNameSuggestions()
    {
        let input = document.getElementById("txtStoreName").value.toLowerCase();
        let dataList = document.getElementById("storeNameSuggestions");
        dataList.innerHTML = "";

        for (let store of allStores)
        {
            if (store.storeName && store.storeName.toLowerCase().includes(input))
            {
                let option = document.createElement("option");
                option.value = store.storeName;
                dataList.appendChild(option);
            }
        }
    }
    document.getElementById("txtStoreAddress").addEventListener('change', fillStoreDetails);
    document.getElementById("txtStoreName").addEventListener('change', fillStoreDetails);

    function fillStoreDetails()
    {
        let input;
        if (this.id === "txtStoreAddress")
        {
            input = this.value;
        } else
        {
            input = document.getElementById("txtStoreName").value;
        }

        for (let store of allStores)
        {
            if (store.storeName === input || store.address === input)
            {
                document.getElementById("storeID").value = store.storeID;
                document.getElementById("txtStoreAddress").value = store.address;
                document.getElementById("txtStoreName").value = store.storeName;
                break;
            }
        }
    }
    //---------
    //填寫地址欄位啟用禁用
    function updateDeliveryInputs()
    {
        let isHomeDeliverySelected = $(".delivery-radio[data-delivery-type='宅配']:checked").length > 0;
        let isStorePickupSelected = $(".delivery-radio[data-delivery-type='超商門市取貨']:checked").length > 0;

        // 更新宅配地址欄位
        if (isHomeDeliverySelected)
        {
            $("input[name='DeliveryAddress_homeDelivery']").attr("placeholder", "請輸入宅配地址").prop("disabled", false);
        } else
        {
            $("input[name='DeliveryAddress_homeDelivery']").attr("placeholder", "宅配未選擇").prop("disabled", true).val("");
        }

        // 更新 DeliveryStoreName_storePickup
        if (isStorePickupSelected)
        {
            $("input[name='DeliveryStoreName_storePickup']").attr("placeholder", "請輸入門市名稱").prop("disabled", false);
        } else
        {
            $("input[name='DeliveryStoreName_storePickup']").attr("placeholder", "超商門市取貨未選擇").prop("disabled", true).val('');
        }

        // 更新 DeliveryAddress_storePickup
        if (isStorePickupSelected)
        {
            $("input[name='DeliveryAddress_storePickup']").attr("placeholder", "請輸入門市地址").prop("disabled", false);
        } else
        {
            $("input[name='DeliveryAddress_storePickup']").attr("placeholder", "超商門市取貨未選擇").prop("disabled", true).val('');
        }

        // 特別處理 DeliveryStoreID_storePickup
        if (isStorePickupSelected)
        {
            $("input[name='DeliveryStoreID_storePickup']").attr("placeholder", "").prop("disabled", false);
        } else
        {
            $("input[name='DeliveryStoreID_storePickup']").attr("placeholder", "超商門市取貨未選擇").prop("disabled", true).val('');
        }
    }

    $(document).ready(function ()
    {
        $(".delivery-radio").on('change', function ()
        {
            updateDeliveryInputs();
        });
        updateDeliveryInputs();
    });
</script>
